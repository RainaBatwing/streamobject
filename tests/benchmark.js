// Generated by CoffeeScript 1.8.0
(function() {
  var i, keyA, keyB, keyC, nacl, sharedKey, slownacl, testcipher, testnonce, testplain, _i, _j, _k, _l, _m;

  slownacl = require('tweetnacl/nacl');

  nacl = require('tweetnacl/nacl-fast');

  keyA = nacl.box.keyPair();

  keyB = nacl.box.keyPair();

  keyC = nacl.box.keyPair();

  testplain = nacl.util.decodeUTF8("If I could go anywhere it would be outer space");

  testnonce = nacl.randomBytes(24);

  testcipher = nacl.box(testplain, testnonce, keyB.publicKey, keyA.secretKey);

  console.time('10 nacl-fast box');

  for (i = _i = 0; _i < 10; i = ++_i) {
    nacl.box(testplain, testnonce, keyA.publicKey, keyC.secretKey);
  }

  console.timeEnd('10 nacl-fast box');

  console.time('10 nacl box');

  for (i = _j = 0; _j < 10; i = ++_j) {
    slownacl.box(testplain, testnonce, keyA.publicKey, keyC.secretKey);
  }

  console.timeEnd('10 nacl box');

  console.time('100 box.before');

  for (i = _k = 0; _k < 100; i = ++_k) {
    nacl.box.before(keyA.publicKey, keyC.secretKey);
  }

  console.timeEnd('100 box.before');

  sharedKey = nacl.box.before(keyA.publicKey, keyB.secretKey);

  console.time('1000 box.after valid');

  for (i = _l = 0; _l < 1000; i = ++_l) {
    nacl.box.open.after(testcipher, testnonce, sharedKey);
  }

  console.timeEnd('1000 box.after valid');

  sharedKey = nacl.box.before(keyA.publicKey, keyC.secretKey);

  console.time('1000 box.after fail');

  for (i = _m = 0; _m < 1000; i = ++_m) {
    nacl.box.open.after(testcipher, testnonce, sharedKey);
  }

  console.timeEnd('1000 box.after fail');

}).call(this);
